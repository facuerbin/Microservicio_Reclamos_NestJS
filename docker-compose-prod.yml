# Trae imagenes precompiladas desde docker hub, está es la versión para producción
version: "3"
services:
  rabbitmq:
    container_name: ec-rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    image: "rabbitmq:3.8.3-management"
  mongo:
    container_name: ec-mongo
    ports:
      - "27017:27017"
    image: "mongo:4.0.18-xenial"
  redis:
    container_name: ec-redis
    ports:
      - "6379:6379"
    image: "redis:5.0.9-buster"
  prod-auth-go:
    container_name: prod-auth-go
    ports:
      - "3000:3000"
    image: nmarsollier/prod-auth-go:v1.0
    depends_on:
      - "rabbitmq"
      - "mongo"
  prod-image-go:
    container_name: prod-image-go
    ports:
      - "3001:3001"
    image: nmarsollier/prod-image-go:v1.0
    depends_on:
      - "rabbitmq"
      - "redis"
  prod-catalog-java:
    container_name: prod-catalog-java
    ports:
      - "3002:3002"
    image: nmarsollier/prod-catalog-java:v1.0
    depends_on:
      - "rabbitmq"
      - "mongo"
  prod-cart-node:
    container_name: prod-cart-node
    ports:
      - "3003:3003"
    image: nmarsollier/prod-cart-node:v1.0
    depends_on:
      - "rabbitmq"
      - "mongo"
  prod-order-java:
    container_name: prod-order-java
    ports:
      - "3004:3004"
    image: facuerbin/ordenes-java:latest
    depends_on:
      - "rabbitmq"
      - "mongo"
  prod-comlplaints-node:
    container_name: prod-comlplaints-node
    ports:
      - "3005:3005"
    image: facuerbin/microservicio_reclamos:latest
    depends_on:
      - "rabbitmq"
      - "mongo"
  prod-api-cli:
    container_name: prod-api-cli
    ports:
      - '4200:80'
    image: nmarsollier/prod-api-cli:v1.1
    stdin_open: true
    depends_on:
      - "prod-order-java"
      - "prod-cart-node"
      - "prod-catalog-java"
      - "prod-image-go"
      - "prod-auth-go"

networks:
  default:
    driver: bridge